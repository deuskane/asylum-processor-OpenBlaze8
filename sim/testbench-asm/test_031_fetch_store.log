
Picoblaze Assembler based on kpicosim  Version 1.0
Source File: /home/semai/Work/REPO_HOME/asylum/OpenBlaze8/tools/../sim/testbench-asm/test_031_fetch_store.psm

Line  Addr Instr  Source Code
   1              ; ;------------------------------------
   2              ; ; Test 031
   3              ; ; fetch/store indirect address
   4              ; ; WARNING : RAM address is invalid (> $3F)
   5              ; ;------------------------------------
   6              
   7              ; ;------------------------------------
   8              ; ; directive compilation fichier
   9              ; ;------------------------------------
  10              
  11              VHDL      "../ROM_blank_adh.vhd", "../../OpenBlaze8_ROM.vhd", "OpenBlaze8_ROM"
  12              
  13              ; ;------------------------------------
  14              ; ; Constantes
  15              ; ;------------------------------------
  16              sp                  EQU       sF
  17              
  18              test_val_ok         EQU       $FA
  19              test_val_ko         EQU       $ED
  20              
  21              ; ;------------------------------------
  22              ; ; directives pour le simulateur:  definition des  E/S
  23              ; ;------------------------------------
  24              switch_id           EQU       $00
  25              led_id              EQU       $20
  26              debug_id            EQU       $e0
  27              
  28              switch              DSIN      switch_id
  29              led                 DSOUT     led_id
  30              debug               DSOUT     debug_id
  31              
  32              ; ;------------------------------------
  33              ; ; MAIN
  34              ; ;------------------------------------
  35                                  ORG       $000
  36              main:
  37  000  00100                      LOAD      s1, $00             ; data
  38  001  00221                      LOAD      s2, $21             ; data init
  39              
  40  002  000c0                      LOAD      s0, $C0             ; address
  41  003  01a00                      LOAD      sA, s0
  42  004  18a40                      ADD       sA, $40
  43  005  01120                      LOAD      s1, s2
  44  006  3400a                      JUMP      store_loop_test
  45              store_loop_body: 
  46  007  2f100                      STORE     s1, s0
  47  008  18001                      ADD       s0, $1
  48  009  18101                      ADD       s1, $1
  49              
  50              store_loop_test: 
  51  00a  150a0                      COMP      s0, sA
  52  00b  35407                      JUMP      NZ, store_loop_body
  53              
  54              
  55  00c  000c0                      LOAD      s0, $C0
  56  00d  01120                      LOAD      s1, s2
  57  00e  34014                      JUMP      fetch_loop_test
  58              fetch_loop_body: 
  59  00f  07300                      FETCH     s3, s0
  60  010  15130                      COMP      s1, s3
  61  011  35417                      JUMP      NZ, test_ko
  62  012  18001                      ADD       s0, $1
  63  013  18101                      ADD       s1, $1
  64              
  65              fetch_loop_test: 
  66  014  150a0                      COMP      s0, sA
  67  015  3540f                      JUMP      NZ, fetch_loop_body
  68              
  69              
  70              
  71  016  343fc                      JUMP      test_ok
  72              
  73              ; ;------------------------------------
  74              ; ; Test ok/ko
  75              ; ;------------------------------------
  76              test_ko:
  77  017  00eed                      LOAD      sE, test_val_ko
  78  018  2cee0                      OUT       sE, debug_id
  79  019  34017                      JUMP      test_ko
  80              
  81                                  ORG       $3FC
  82              test_ok: 
  83                                  LOAD      sE, test_val_ok
  84                                  OUT       sE, debug_id
  85                                  JUMP      test_ok
  86              
  87              ; ;------------------------------------
  88              ; ; Interrupt VECTOR
  89              ; ;------------------------------------
  90                                  ORG       $3FF
  91                                  RETI      ENABLE
