
Picoblaze Assembler based on kpicosim  Version 1.0
Source File: /home/semai/Work/REPO_HOME/asylum/OpenBlaze8/tools/../sim/testbench-asm/test_032_stack_depth.psm

Line  Addr Instr  Source Code
   1              ; ;------------------------------------
   2              ; ; Test 032
   3              ; ; Test stack depth
   4              ; ; >  $20 KO
   5              ; ; == $20 OK pbzIDE / KO kcpsm3
   6              ; ; <  $20 OK
   7              ; ;------------------------------------
   8              
   9              ; ;------------------------------------
  10              ; ; directive compilation fichier
  11              ; ;------------------------------------
  12              
  13              VHDL      "../ROM_blank_adh.vhd", "../../OpenBlaze8_ROM.vhd", "OpenBlaze8_ROM"
  14              
  15              ; ;------------------------------------
  16              ; ; Constantes
  17              ; ;------------------------------------
  18              sp                  EQU       sF
  19              
  20              test_val_ok         EQU       $FA
  21              test_val_ko         EQU       $ED
  22              
  23              ; ;------------------------------------
  24              ; ; directives pour le simulateur:  definition des  E/S
  25              ; ;------------------------------------
  26              switch_id           EQU       $00
  27              led_id              EQU       $20
  28              debug_id            EQU       $e0
  29              
  30              switch              DSIN      switch_id
  31              led                 DSOUT     led_id
  32              debug               DSOUT     debug_id
  33              
  34              ; ;------------------------------------
  35              ; ; MAIN
  36              ; ;------------------------------------
  37                                  ORG       $000
  38              main: 
  39              
  40  000  00000                      LOAD      s0, $0
  41  001  001ff                      LOAD      s1, $FF             ; -1
  42  002  0021f                      LOAD      s2, $1f 			  ; loop
  43              
  44  003  34005                      JUMP      call_loop_test
  45              call_loop_body: 
  46  004  18001                      ADD       s0, $1
  47              
  48              call_loop_test: 
  49  005  15020                      COMP      s0, s2
  50  006  31404                      CALL      NZ, call_loop_body
  51              
  52  007  18101                      ADD       s1, $1
  53              
  54  008  15120                      COMP      s1, s2
  55  009  2b400                      RET       NZ
  56              
  57  00a  15010                      COMP      s0, s1
  58  00b  3540f                      JUMP      NZ, test_ko
  59  00c  15020                      COMP      s0, s2
  60  00d  3540f                      JUMP      NZ, test_ko
  61              
  62              
  63  00e  343fc                      JUMP      test_ok
  64              
  65              ; ;------------------------------------
  66              ; ; Test ok/ko
  67              ; ;------------------------------------
  68              test_ko:
  69  00f  00eed                      LOAD      sE, test_val_ko
  70  010  2cee0                      OUT       sE, debug_id
  71  011  3400f                      JUMP      test_ko
  72              
  73                                  ORG       $3FC
  74              test_ok: 
  75                                  LOAD      sE, test_val_ok
  76                                  OUT       sE, debug_id
  77                                  JUMP      test_ok
  78              
  79              ; ;------------------------------------
  80              ; ; Interrupt VECTOR
  81              ; ;------------------------------------
  82                                  ORG       $3FF
  83                                  RETI      ENABLE
